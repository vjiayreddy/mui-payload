/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    pages: Page;
    filters: Filter;
    products: Product;
    redirects: Redirect;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    filters: FiltersSelect<false> | FiltersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  slug: string;
  slugLock?: boolean | null;
  description?: string | null;
  image?: (string | null) | Media;
  isPublished?: boolean | null;
  level: '1' | '2' | '3';
  parent?: (string | null) | Category;
  subcategories?:
    | {
        subcategory?: (string | null) | Category;
        id?: string | null;
      }[]
    | null;
  /**
   * Select which filters should be available for this category
   */
  availableFilters?: (string | Filter)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "filters".
 */
export interface Filter {
  id: string;
  name: string;
  slug: string;
  slugLock?: boolean | null;
  type?: ('multi_select' | 'single_select' | 'rangle-select') | null;
  options?:
    | {
        label: string;
        value: string;
        isActive?: boolean | null;
        id?: string | null;
      }[]
    | null;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  name: string;
  layout: (
    | CallToActionBlock
    | BestSellingItemsBlock
    | HeroFeaturedProductsBlock
    | ProductHeroSliderBlock
    | ServiceGuaranteesBlock
    | ProductCategorySelectorBlock
    | AnimatedAdsBannerAreaBlock
    | FlashDealsBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug: string;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BestSellingItemsBlock".
 */
export interface BestSellingItemsBlock {
  label?: string | null;
  title: string;
  description: string;
  products?: (string | Product)[] | null;
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'bestSellingItems';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  slug: string;
  slugLock?: boolean | null;
  description: string;
  image: string | Media;
  isPublished?: boolean | null;
  price: number;
  stock: number;
  categories: (string | Category)[];
  brand: string;
  filterType?: ('RAM' | 'Storage') | null;
  filterOptions?: string[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroFeaturedProductsBlock".
 */
export interface HeroFeaturedProductsBlock {
  sectionOneTitle: string;
  sectionOneDescription: string;
  sectionOneButtonText: string;
  sectionOneImage: string | Media;
  sectionTwoTitle: string;
  sectionTwoDescription: string;
  sectionTwoButtonText: string;
  sectionTwoImage: string | Media;
  sectionThreeTitle: string;
  sectionThreeDescription: string;
  sectionThreeButtonText: string;
  sectionThreeImage: string | Media;
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroFeaturedProducts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductHeroSliderBlock".
 */
export interface ProductHeroSliderBlock {
  slides?:
    | {
        discountTitle?: string | null;
        /**
         * Discount Title Color
         */
        discountTitleColor?: string | null;
        title: string;
        titleColor?: string | null;
        description: string;
        descriptionTextColor?: string | null;
        background_color_type?: ('color' | 'gradient') | null;
        slideBackgroundColor?: string | null;
        gradient_colors?: {
          from_color?: string | null;
          via_color?: string | null;
          to_color?: string | null;
        };
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productHeroSlider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceGuaranteesBlock".
 */
export interface ServiceGuaranteesBlock {
  services: {
    iconName: string;
    title: string;
    description: string;
    id?: string | null;
  }[];
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'serviceGuarantees';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductCategorySelectorBlock".
 */
export interface ProductCategorySelectorBlock {
  categories?: (string | Category)[] | null;
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productCategorySelector';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AnimatedAdsBannerAreaBlock".
 */
export interface AnimatedAdsBannerAreaBlock {
  Content: {
    heading: string;
    titleNormal: string;
    titleBold: string;
  };
  Customization?: {
    headingColor?: string | null;
    titleNormalColor?: string | null;
    titleBoldColor?: string | null;
    animatedSectionBgColor?: string | null;
    sectionBgColor?: string | null;
  };
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'animatedAdsBannerArea';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FlashDealsBlock".
 */
export interface FlashDealsBlock {
  sectionHeading?: string | null;
  iconName?: string | null;
  products?: (string | Product)[] | null;
  isPublished?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'flashDeals';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'filters';
        value: string | Filter;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  image?: T;
  isPublished?: T;
  level?: T;
  parent?: T;
  subcategories?:
    | T
    | {
        subcategory?: T;
        id?: T;
      };
  availableFilters?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  name?: T;
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        bestSellingItems?: T | BestSellingItemsBlockSelect<T>;
        heroFeaturedProducts?: T | HeroFeaturedProductsBlockSelect<T>;
        productHeroSlider?: T | ProductHeroSliderBlockSelect<T>;
        serviceGuarantees?: T | ServiceGuaranteesBlockSelect<T>;
        productCategorySelector?: T | ProductCategorySelectorBlockSelect<T>;
        animatedAdsBannerArea?: T | AnimatedAdsBannerAreaBlockSelect<T>;
        flashDeals?: T | FlashDealsBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BestSellingItemsBlock_select".
 */
export interface BestSellingItemsBlockSelect<T extends boolean = true> {
  label?: T;
  title?: T;
  description?: T;
  products?: T;
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroFeaturedProductsBlock_select".
 */
export interface HeroFeaturedProductsBlockSelect<T extends boolean = true> {
  sectionOneTitle?: T;
  sectionOneDescription?: T;
  sectionOneButtonText?: T;
  sectionOneImage?: T;
  sectionTwoTitle?: T;
  sectionTwoDescription?: T;
  sectionTwoButtonText?: T;
  sectionTwoImage?: T;
  sectionThreeTitle?: T;
  sectionThreeDescription?: T;
  sectionThreeButtonText?: T;
  sectionThreeImage?: T;
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductHeroSliderBlock_select".
 */
export interface ProductHeroSliderBlockSelect<T extends boolean = true> {
  slides?:
    | T
    | {
        discountTitle?: T;
        discountTitleColor?: T;
        title?: T;
        titleColor?: T;
        description?: T;
        descriptionTextColor?: T;
        background_color_type?: T;
        slideBackgroundColor?: T;
        gradient_colors?:
          | T
          | {
              from_color?: T;
              via_color?: T;
              to_color?: T;
            };
        image?: T;
        id?: T;
      };
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceGuaranteesBlock_select".
 */
export interface ServiceGuaranteesBlockSelect<T extends boolean = true> {
  services?:
    | T
    | {
        iconName?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductCategorySelectorBlock_select".
 */
export interface ProductCategorySelectorBlockSelect<T extends boolean = true> {
  categories?: T;
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AnimatedAdsBannerAreaBlock_select".
 */
export interface AnimatedAdsBannerAreaBlockSelect<T extends boolean = true> {
  Content?:
    | T
    | {
        heading?: T;
        titleNormal?: T;
        titleBold?: T;
      };
  Customization?:
    | T
    | {
        headingColor?: T;
        titleNormalColor?: T;
        titleBoldColor?: T;
        animatedSectionBgColor?: T;
        sectionBgColor?: T;
      };
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FlashDealsBlock_select".
 */
export interface FlashDealsBlockSelect<T extends boolean = true> {
  sectionHeading?: T;
  iconName?: T;
  products?: T;
  isPublished?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "filters_select".
 */
export interface FiltersSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  type?: T;
  options?:
    | T
    | {
        label?: T;
        value?: T;
        isActive?: T;
        id?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  image?: T;
  isPublished?: T;
  price?: T;
  stock?: T;
  categories?: T;
  brand?: T;
  filterType?: T;
  filterOptions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  topInfoBar?: {
    tapBarStatus?: string | null;
    topBarTitle?: string | null;
    socialLinks?:
      | {
          socialMediaName: string;
          iconName: string;
          url: string;
          id?: string | null;
        }[]
      | null;
    isVisible?: boolean | null;
  };
  /**
   * This is the name of the website  that will be displayed in the header.
   */
  brandName: string;
  logo: string | Media;
  /**
   * Brand Icon name from Iconify
   */
  iconifyIconName?: string | null;
  color?: string | null;
  navLinks?:
    | {
        linkType?: ('internal' | 'external' | 'categories') | null;
        name: string;
        reference?: {
          relationTo: 'pages';
          value: string | Page;
        } | null;
        url?: string | null;
        categories?: (string | Category)[] | null;
        newTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  topInfoBar?:
    | T
    | {
        tapBarStatus?: T;
        topBarTitle?: T;
        socialLinks?:
          | T
          | {
              socialMediaName?: T;
              iconName?: T;
              url?: T;
              id?: T;
            };
        isVisible?: T;
      };
  brandName?: T;
  logo?: T;
  iconifyIconName?: T;
  color?: T;
  navLinks?:
    | T
    | {
        linkType?: T;
        name?: T;
        reference?: T;
        url?: T;
        categories?: T;
        newTab?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}